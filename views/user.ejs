<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>
    <%= userToShow.name %>
  </title>
  <link rel='stylesheet' href='https://site-assets.fontawesome.com/releases/v6.4.0/css/all.css'>
  <link href="/styles/navigation.css" rel="stylesheet" type="text/css">
  <link href="/styles/table.css" rel="stylesheet" type="text/css">
  <link href='/styles/notify.css' rel='stylesheet' type='text/css'>
  <script type="text/javascript" src="/js/notify.js"></script>
  <style>
    h1 {
      display: flex;
      justify-content: center;
      padding: 2rem 0 1rem 0;
    }

    h1 div {
      width: max-content;
      padding: .5rem 1rem;
      border-radius: 8px;
      background-color: #ececec;
      position: relative;
      color: #333;
    }

    h1 div::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      z-index: -1;
      width: 100%;
      height: 100%;
      border-radius: 4px;
      background: linear-gradient(45deg,
          white, black, white);
      background-size: 800%;
      filter: blur(6px);
      animation: glowing 20s linear infinite;
    }

    @keyframes glowing {
      0% {
        background-position: 0 0;
      }

      50% {
        background-position: 400% 0;
      }

      100% {
        background-position: 0 0;
      }
    }

    @media (max-width: 600px) {
      h1 {
        font-size: 1.5rem;
      }
    }

    h2 {
      text-align: center;
      margin: 1rem 0;
    }

    .pending-row:nth-child(odd):hover {
      background-color: rgb(230 230 230 / .7);
    }

    .pending-row:nth-child(even):hover {
      background-color: rgb(230 230 230 / .7);
    }

    .pending-row {
      cursor: pointer;
    }

    .submenu {
      display: none;
      position: absolute;
      background-color: white;
      border: 1px solid #ccc;
      border-radius: 6px;
      box-shadow: 1px 1px 10px rgba(0, 0, 0, 0.2);
    }

    .submenu button {
      border: none;
      outline: none;
      border-radius: 0px;
      background-color: transparent;
      font-size: 1.2rem;
      cursor: pointer;
      padding: 0.2rem;
      transition: background-color 0.2s;
    }

    .submenu button:first-child {
      border-right: .5px solid #ccc;
      border-top-left-radius: 5px;
      border-bottom-left-radius: 5px;
    }

    .submenu button:last-child {
      border-left: .5px solid #ccc;
      border-top-right-radius: 5px;
      border-bottom-right-radius: 5px;
    }


    .submenu button:hover {
      background-color: rgb(215, 215, 215);
    }

    .pending-row.active .submenu {
      display: flex;
    }

    tbody tr td:last-child {
      font-weight: 600;
    }

    .challenge-completed {
      color: rgb(36, 165, 36);
    }

    .challenge-pending {
      color: rgb(143, 24, 24);
    }

    .return-page {
      position: fixed;
      top: 1rem;
      left: 1rem;
      font-size: 1.3rem;
      cursor: pointer;
      border-radius: 8px;
      background-color: #ededed;
      width: 35px;
      height: 35px;
      color: #333;
      border: 1px solid #b3b3b3;
      display: flex;
      justify-content: center;
      align-items: center;
      transition: background-color 0.2s;
    }

    .return-page:hover {
      background-color: #d5d5d5;
    }

    .become-administrator {
      position: fixed;
      bottom: 1rem;
      left: 1rem;
      font-size: 1rem;
      font-weight: bold;
      cursor: pointer;
      border-radius: 8px;
      background-color: #ededed;
      padding: .5rem 1rem;
      color: #333;
      border: 1px solid #b3b3b3;
      display: flex;
      justify-content: center;
      align-items: center;
      transition: background-color 0.2s;
    }

    .become-administrator:hover {
      background-color: #d5d5d5;
    }

    a {
      text-decoration: none;
      color: inherit;
    }

    @media (max-width: 600px) {
      .return-page {
        top: 0rem;
        left: 0rem;
        border-radius: 0;
        border-bottom-right-radius: 8px;
        border-top: none;
        border-left: none;
      }
    }
  </style>
</head>

<body>
  <div class='notify-container'>
    <i id='notify-icon'></i>
    <div class='notify-text'></div>
  </div>

  <div class="return-page">
    <a href="/scoreboard">
      <i class="fas fa-arrow-left"></i>
    </a>
  </div>

  <% if (loggedUser.id == "66d300a6a3f8683c9a0b5c76" && !userToShow.isAdmin) { %>
  <button class="become-administrator">
    Convertir en administrador
  </button>
  <% } %>

  <h1>
    <div>
      <%= userToShow.name %>
    </div>
  </h1>

  <div class="table-container">
    <table>
      <thead>
        <tr>
          <th>Reto</th>
          <th>Puntos</th>
          <th>Estado</th>
        </tr>
      </thead>
      <tbody>
        <% completedChalleges.forEach((challenge, index)=> { %>
        <tr>
          <td>
            <%= challenge.title %>
          </td>
          <td>
            <%= challenge.points %>
          </td>
          <td class="challenge-completed">
            Completado
          </td>
        </tr>
        <% }) %>

        <% pendingChallenges.forEach((challenge, index)=> { %>
        <tr <%= loggedUser.isAdmin ? 'id=' + challenge._id + ' class=pending-row' : '' %>>
          <td>
            <%= challenge.title %>
          </td>
          <td>
            <%= challenge.points %>
          </td>


          <td class="challenge-pending">
            Pendiente

            <% if (loggedUser.isAdmin) { %>
            <div class="submenu">
              <button class="accept-button">✅</button>
              <button class="reject-button">❌</button>
            </div>
            <% } %>
          </td>
        </tr>
        <% }) %>

      </tbody>
    </table>
  </div>
  <% if (loggedUser.isAdmin) { %>
  <script>
    const $ = (selector) => document.querySelector(selector)
    const $$ = (selector) => document.querySelectorAll(selector)

    let rowSelected

    document.addEventListener('DOMContentLoaded', function() {
      const pendingRows = $$('.pending-row')

      pendingRows.forEach(row => {
        row.addEventListener('click', function() {
          const isActive = row.classList.contains('active')

          pendingRows.forEach(r => r.classList.remove('active'))

          if (!isActive) {
            row.classList.add('active')
            const submenu = $('.submenu')
            submenu.style.left = `${event.clientX}px`
            submenu.style.top = `${event.clientY}px`

            rowSelected = row
          }
        })
      })

      $$('.accept-button').forEach(button => {
        button.addEventListener('click', function(event) {
          event.stopPropagation()

          fetch('/challenges/accept-challenge-completed', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                userId: '<%= userToShow._id %>',
                challengeId: rowSelected.id
              })
            })
            .then(res => res.json())
            .then(data => {
              if (data.err) {
                notify(data.err, 1000)
              } else {
                $$('.pending-row').forEach(row => row.classList.remove('active'))

                const pendingCell = rowSelected.querySelector('.challenge-pending')

                pendingCell.innerHTML = 'Completado'
                pendingCell.classList.remove('challenge-pending')
                pendingCell.style.color = 'rgb(36, 165, 36)'
                rowSelected.classList.remove('pending-row')

                notify('Reto confirmado correctamente', 1000, 'success')
              }
            })
        })
      })
      
      $$('.reject-button').forEach(button => {
        button.addEventListener('click', function(event) {
          event.stopPropagation()

          fetch('/challenges/reject-challenge-completed', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                userId: '<%= userToShow._id %>',
                challengeId: rowSelected.id
              })
            })
            .then(res => res.json())
            .then(data => {
              if (data.err) {
                notify(data.err, 1000)
              } else {
                $$('.pending-row').forEach(row => row.classList.remove('active'))

                rowSelected.remove()

                notify('Reto rechazado correctamente', 1000, 'success')
              }
            })
        })
      })
      
      $('.become-administrator').addEventListener('click', function() {
        fetch('/users/become-administrator', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            userId: '<%= userToShow._id %>'
          })
        })
        .then(res => res.json())
        .then(data => {
          if (data.err) {
            notify(data.err, 1000)
          } else {
            $('.become-administrator').remove()
            notify('Usuario convertido en administrador correctamente', 1000, 'success')
          }
        })
      })
    })
  </script>
  <% } %>
</body>

</html>